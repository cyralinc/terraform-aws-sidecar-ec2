
function get_secret(){
  secret=$(aws secretsmanager get-secret-value --secret-id ${secrets_location} --query SecretString --output text --region ${aws_region})
}

function get_token () {
  local sidecar_client_id=$(echo "$secret" | jq -r .clientId)
  local sidecar_client_secret=$(echo "$secret" | jq -r .clientSecret)
  local url_token="${protocol}://${controlplane_host}:$1/v1/users/oidc/token"
  token=$(${curl} --fail --no-progress-meter --request POST "$url_token" -d grant_type=client_credentials -d client_id="$${sidecar_client_id}" -d client_secret="$${sidecar_client_secret}" 2>&1)
  token_error=$(echo $?)
}

function download_sidecar () {
  # Test default (443) and then 8000
  get_token "443"
  if [[ $token_error -ne 0 ]]; then
    get_token "8000"
    if [[ $token_error -ne 0 ]]; then
      return 1
    fi
  fi
  local access_token=$(echo "$token" | jq -r .access_token)
  local url="${protocol}://${controlplane_host}/deploy/docker-compose?TemplateVersion=${sidecar_version}&TemplateType=terraform&LogIntegration=${log_integration}&MetricsIntegration=${metrics_integration}&HCVaultIntegrationID=${hc_vault_integration_id}&WiresEnabled=${repositories_supported}"
  echo "Trying to download the sidecar template from: $url"
  if [[ $(${curl} -s -o /home/ec2-user/sidecar.compose.yaml -w "%%{http_code}" -L "$url" -H "Authorization: Bearer $access_token") = 200 ]]; then
    return 0
  fi
  return 1
}

function login () {
  local key=$(echo "$secret" | jq -r 'select(.containerRegistryKey != null) | .containerRegistryKey' | base64 --decode)
  if [[ ${container_registry} == *".amazonaws.com"* ]]; then
    echo "(login): Logging in to AWS ECR..."
    eval $(aws ecr --no-include-email get-login  --region ${aws_region})
  elif [ -n "$key" ]; then
    echo "(login): Logging in to GCR..."
    echo "$key" | docker login -u ${container_registry_username} --password-stdin https://gcr.io
  else
    echo "(login): Won't log in automatically to any image registry. Image registry set to: ${container_registry}"
  fi
}

function launch () { cd /home/ec2-user && docker compose -f sidecar.compose.yaml up -d; }

echo "Fetching secret"
retry get_secret
echo "Downloading sidecar compose"
retry download_sidecar
echo "processing container registry login"
retry login
echo "launching cyral services"
retry launch
