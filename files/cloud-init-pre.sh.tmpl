
mkdir -p /home/ec2-user/cyral/
package_install
docker_setup
if [[ ${use_single_container} == "true" ]]; then
    echo "Skipping Docker Compose Install, not required for single container"
else
    docker_compose_install
fi
fetch_hostname
update_nginx_resolver
get_secret
load_certs
load_idp_certs
registry_login
if [[ ${use_single_container} == "true" ]]; then
    echo "Skipping Download Sidecar Compose File, not required for single container"
else
    retry download_sidecar
fi

echo "Initializing environment variables..."
cat > /home/ec2-user/.env << EOF
SIDECAR_ID=${sidecar_id}
SIDECAR_VERSION=${sidecar_version}
CONTROLPLANE_HOST=${controlplane_host}
CONTAINER_REGISTRY=${container_registry}
SECRETS_LOCATION=${secrets_location}
SIDECAR_ENDPOINT=${sidecar_endpoint}
AWS_REGION=${aws_region}
INSTANCE_ID=$INSTANCE_ID
DD_API_KEY=${dd_api_key}
LOG_GROUP_NAME=${log_group_name}

LOG_INTEGRATION=${log_integration}
METRICS_INTEGRATION=${metrics_integration}
TLS_SKIP_VERIFY=${tls_skip_verify}

NGINX_RESOLVER=$NGINX_RESOLVER
SSO_LOGIN_URL=${idp_sso_login_url}
IDP_CERTIFICATE=${replace(idp_certificate, "\n", "\\n")}

SIDECAR_IDP_PUBLIC_CERT=$SIDECAR_IDP_PUBLIC_CERT
SIDECAR_IDP_PRIVATE_KEY=$SIDECAR_IDP_PRIVATE_KEY

HCVAULT_INTEGRATION_ID=${hc_vault_integration_id}

LOAD_BALANCER_TLS_PORTS=${load_balancer_tls_ports}

CYRAL_SIDECAR_ID=${sidecar_id}
CYRAL_SIDECAR_CLIENT_ID=$${SIDECAR_CLIENT_ID}
CYRAL_SIDECAR_CLIENT_SECRET=$${SIDECAR_CLIENT_SECRET}
CYRAL_CONTROL_PLANE=${controlplane_host}
CYRAL_SIDECAR_ENDPOINT=${sidecar_endpoint}

CYRAL_CERTIFICATE_MANAGER_TLS_KEY=$${SIDECAR_TLS_KEY}
CYRAL_CERTIFICATE_MANAGER_TLS_CERT=$${SIDECAR_TLS_CERT}
CYRAL_CERTIFICATE_MANAGER_CA_KEY=$${SIDECAR_CA_KEY}
CYRAL_CERTIFICATE_MANAGER_CA_CERT=$${SIDECAR_CA_CERT}

SIDECAR_CLIENT_ID=$${SIDECAR_CLIENT_ID}
SIDECAR_CLIENT_SECRET=$${SIDECAR_CLIENT_SECRET}
EOF
